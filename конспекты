использование <sort>
Размер массива n вычисляется как sizeof(arr) / sizeof(arr[0]).

Сортировка массива:
Массив сортируется с помощью функции std::sort(arr, arr + n).

Поиск элемента:
Элемент searchElement ищется с помощью функции std::find(arr, arr + n, searchElement).
Если элемент найден, выводится его позиция.

Подсчет количества вхождений элемента:
Количество вхождений элемента countElement подсчитывается с помощью функции std::count(arr, arr + n, countElement).

Поиск минимального и максимального элементов:
Минимальный элемент находится с помощью функции std::min_element(arr, arr + n).

Максимальный элемент находится с помощью функции std::max_element(arr, arr + n).

   !в векторе!
Функция std::unique из библиотеки <algorithm> используется для удаления последовательных дубликатов в диапазоне.
Она не изменяет размер контейнера, а лишь перемещает дубликаты в конец диапазона, возвращая итератор на первый элемент, который является дубликатом.
// Удаление последовательных дубликатов
auto last = unique(v.begin(), v.end());
v.erase(last, v.end());

чтобы отсортировать вектор в обратном порядке перед begin и end пишем r - rbegin,rend

Если вы используете строки из стандартной библиотеки C++ (std::string), то длина строки вычисляется с помощью метода .length() или .size().


работа с файлами c++

#include <fstream>
ofstream — для записи данных в файл.
ifstream — для чтения данных из файла.
fstream — для одновременной записи и чтения.

string line;
   while (getline(inFile, line)) { // Читаем файл построчно
      cout << line << endl;
   }

При открытии файла можно указать режим, в котором он будет использоваться:
ios::in — открыть для чтения.
ios::out — открыть для записи (перезаписывает файл).
ios::app — открыть для добавления данных в конец файла.
ios::binary — открыть файл в бинарном режиме.

Пример:

ofstream outFile("example.txt", ios::app); // Открыть для добавления данных

проверка на то открылся ли файл:
if (!outFile.is_open()) {
        cout << "Ошибка открытия файла для записи!" << endl;
        return 1;
    }
